# postgres.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: tools
spec:
  clusterIP: None
  ports:
  - name: pg
    port: 5432
    targetPort: 5432
  selector: { app: postgres }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: tools
spec:
  serviceName: postgres
  replicas: 1
  selector: { matchLabels: { app: postgres } }
  template:
    metadata: { labels: { app: postgres } }
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports: [{ containerPort: 5432 }]
        env:
        - name: POSTGRES_DB
          valueFrom: { secretKeyRef: { name: n8n-secrets, key: POSTGRES_DB } }
        - name: POSTGRES_USER
          valueFrom: { secretKeyRef: { name: n8n-secrets, key: POSTGRES_USER } }
        - name: POSTGRES_PASSWORD
          valueFrom: { secretKeyRef: { name: n8n-secrets, key: POSTGRES_PASSWORD } }
        readinessProbe:
          exec: { command: ["pg_isready","-U","postgres"] }
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec: { command: ["pg_isready","-U","postgres"] }
          initialDelaySeconds: 30
          periodSeconds: 20
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata: { name: pgdata }
    spec:
      accessModes: ["ReadWriteOnce"]
      resources: { requests: { storage: 20Gi } }
